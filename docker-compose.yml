version: '3.4'

x-cache-from:
  - &api-cache-from
    cache_from:
      - ${NGINX_IMAGE:-quay.io/api-platform/nginx}
      - ${PHP_IMAGE:-quay.io/api-platform/php}

services:
  php:
    build:
      context: ./api
      target: api_platform_php
    depends_on:
      - db
    restart: unless-stopped
    volumes:
      - php_socket:/var/run/php
      - ./api:/srv/api:rw,cached
      - ./api/docker/php/conf.d/api-platform.dev.ini:/usr/local/etc/php/conf.d/api-platform.ini
    healthcheck:
      interval: 100s
      timeout: 30s
      retries: 3
      start_period: 30s
    environment:
      APP_ENV: dev
    links:
      - caddy

  db:
    image: postgres:12-alpine
    environment:
      - POSTGRES_DB=cz_loopr_app
      - POSTGRES_PASSWORD=root
      - POSTGRES_USER=root
    volumes:
      - db-data:/var/lib/postgresql/data:rw
    ports:
      - target: 5432
        published: 5432
        protocol: tcp
  docs:
    container_name: loopr_docs
    build:
      context: ./docs
      dockerfile: ../docker/docs/Dockerfile
    ports:
      - 3001:3001
    volumes:
      - ./docs:/docs

  caddy:
    build:
      context: api/
      target: api_platform_caddy
    depends_on:
      - app
    links:
      - app
    environment:
      PWA_UPSTREAM: app:3000
      SERVER_NAME: ${SERVER_NAME:-localhost, caddy:80}
      MERCURE_PUBLISHER_JWT_KEY: ${MERCURE_PUBLISHER_JWT_KEY:-!ChangeMe!}
      MERCURE_SUBSCRIBER_JWT_KEY: ${MERCURE_SUBSCRIBER_JWT_KEY:-!ChangeMe!}
      MERCURE_EXTRA_DIRECTIVES: demo /srv/mercure-assets/
      CORS_ALLOWED_ORIGINS: ${CORS_ALLOWED_ORIGINS:-*}
    restart: unless-stopped
    volumes:
      - php_socket:/var/run/php
      - caddy_data:/data
      - caddy_config:/config
      - ./api/docker/caddy/Caddyfile:/etc/caddy/Caddyfile:ro
      - ./api/public:/srv/api/public:ro
    ports:
      - target: 80
        published: 8082
        protocol: tcp
      - target: 443
        published: 443
        protocol: tcp
      # HTTP/3
      - target: 443
        published: 446
        protocol: udp

  app:
    container_name: loopr_app_dev
    build:
      context: ./app
      dockerfile: ../docker/app/dev/Dockerfile
    volumes:
      - ./app:/app
      - /app/node_modules
      - /app/.next

  storybook:
    container_name: loopr_storbook
    build:
      context: ./app
      dockerfile: ../docker/app/dev/Dockerfile
    ports:
      - 3002:3002
    command: storybook --quiet
    volumes:
      - ./app:/app

volumes:
  php_socket:
  db-data:
  caddy_data:
  caddy_config:
